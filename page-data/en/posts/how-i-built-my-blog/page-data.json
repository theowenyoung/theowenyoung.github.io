{
    "componentChunkName": "component---node-modules-gatsby-theme-timeline-src-gatsby-theme-blog-core-templates-post-query-js",
    "path": "/en/posts/how-i-built-my-blog/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Owen Young's Story","author":"Owen Young","description":"All my stories are here","keywords":["Owen","Owen Young","Blog","Story"],"siteUrl":"https://blog.owenyoung.com","telegram":"@theowenyoung","iconUrl":"/icon.png","defaultSocialImageUrl":null,"social":[{"name":"About","url":"https://wiki.owenyoung.com/about","external":null},{"name":"Now","url":"https://wiki.owenyoung.com/now","external":null},{"name":"Projects","url":"https://wiki.owenyoung.com/projects","external":null},{"name":"Github @theowenyoung","url":"https://github.com/theowenyoung","external":null},{"name":"Twitter @TheOwenYoung","url":"https://twitter.com/TheOwenYoung","external":null},{"name":"中文Twitter @OwenYoung_zh","url":"https://twitter.com/OwenYoung_zh","external":null},{"name":"Telegram @theowenyoung","url":"https://t.me/theowenyoung","external":null},{"name":"Instagram @iamowenyoung","url":"https://www.instagram.com/iamowenyoung/","external":null},{"name":"RSS","url":"/rss.xml","external":null},{"name":"English RSS","url":"/en/rss.xml","external":null},{"name":"中文RSS","url":"/zh/rss.xml","external":null},{"name":"Source","url":"https://github.com/theowenyoung/story","external":null},{"name":"Site Source","url":"https://github.com/theowenyoung/theowenyoung.github.io","external":null}],"menuLinks":[{"name":"仅显示中文","url":"/zh","external":null},{"name":"Only English","url":"/en","external":null}],"disqus":null,"utterances":{"repo":"theowenyoung/story","label":"comment"}}},"blogPost":{"id":"9eb39dce-a52f-52a3-882f-dc2a70f09c91","excerpt":"A long time ago I wanted to show all my works on my homepage, includes posts, tweets, Instagram posts, etc. Today, I did it! By developing a…","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"How I Built my Blog?\",\n  \"date\": \"2021-01-30T00:00:00.000Z\",\n  \"tags\": [\"Gatsby\", \"Theme\", \"Blog\", \"Stack\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A long time ago I wanted to show all my works on my homepage, includes posts, tweets, Instagram posts, etc. Today, I did it! By developing a new gatsby blog theme \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/theowenyoung/gatsby-theme-timeline\"\n  }, \"gatsby-theme-timeline\"), \". I\\u2019ll record the workflow of my blog here.\"), mdx(\"h2\", {\n    \"id\": \"workflow\"\n  }, \"Workflow\"), mdx(\"p\", null, \"The blog is content-site separated, which means I created a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/theowenyoung/story\"\n  }, \"content repository\"), \" and a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/theowenyoung/theowenyoung.github.io\"\n  }, \"site repository\"), \". I hope I can store all my creative works to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/theowenyoung/story\"\n  }, \"the content repo\")), mdx(\"p\", null, \"I made a flow chart for the workflow:\"), mdx(\"div\", {\n    \"className\": \"mermaid\",\n    \"data-processed\": \"true\"\n  }, mdx(\"svg\", {\n    parentName: \"div\",\n    \"id\": \"mermaid-1646747587488\",\n    \"width\": \"100%\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\",\n    \"xmlnsXLink\": \"http://www.w3.org/1999/xlink\",\n    \"height\": \"266\",\n    \"style\": {\n      \"maxWidth\": \"491.984375px\"\n    },\n    \"viewBox\": \"0 0 491.984375 266\"\n  }, mdx(\"style\", {\n    parentName: \"svg\"\n  }, \"#mermaid-1646747587488{font-family:\\\"trebuchet ms\\\",verdana,arial,sans-serif;font-size:16px;fill:#333;}#mermaid-1646747587488 .error-icon{fill:#552222;}#mermaid-1646747587488 .error-text{fill:#552222;stroke:#552222;}#mermaid-1646747587488 .edge-thickness-normal{stroke-width:2px;}#mermaid-1646747587488 .edge-thickness-thick{stroke-width:3.5px;}#mermaid-1646747587488 .edge-pattern-solid{stroke-dasharray:0;}#mermaid-1646747587488 .edge-pattern-dashed{stroke-dasharray:3;}#mermaid-1646747587488 .edge-pattern-dotted{stroke-dasharray:2;}#mermaid-1646747587488 .marker{fill:#333333;}#mermaid-1646747587488 .marker.cross{stroke:#333333;}#mermaid-1646747587488 svg{font-family:\\\"trebuchet ms\\\",verdana,arial,sans-serif;font-size:16px;}#mermaid-1646747587488 .label{font-family:\\\"trebuchet ms\\\",verdana,arial,sans-serif;color:#333;}#mermaid-1646747587488 .label text{fill:#333;}#mermaid-1646747587488 .node rect,#mermaid-1646747587488 .node circle,#mermaid-1646747587488 .node ellipse,#mermaid-1646747587488 .node polygon,#mermaid-1646747587488 .node path{fill:#ECECFF;stroke:#9370DB;stroke-width:1px;}#mermaid-1646747587488 .node .label{text-align:center;}#mermaid-1646747587488 .node.clickable{cursor:pointer;}#mermaid-1646747587488 .arrowheadPath{fill:#333333;}#mermaid-1646747587488 .edgePath .path{stroke:#333333;stroke-width:1.5px;}#mermaid-1646747587488 .flowchart-link{stroke:#333333;fill:none;}#mermaid-1646747587488 .edgeLabel{background-color:#e8e8e8;text-align:center;}#mermaid-1646747587488 .edgeLabel rect{opacity:0.5;background-color:#e8e8e8;fill:#e8e8e8;}#mermaid-1646747587488 .cluster rect{fill:#ffffde;stroke:#aaaa33;stroke-width:1px;}#mermaid-1646747587488 .cluster text{fill:#333;}#mermaid-1646747587488 div.mermaidTooltip{position:absolute;text-align:center;max-width:200px;padding:2px;font-family:\\\"trebuchet ms\\\",verdana,arial,sans-serif;font-size:12px;background:hsl(80,100%,96.2745098039%);border:1px solid #aaaa33;border-radius:2px;pointer-events:none;z-index:100;}#mermaid-1646747587488:root{--mermaid-font-family:\\\"trebuchet ms\\\",verdana,arial,sans-serif;}#mermaid-1646747587488 flowchart{fill:apa;}\"), mdx(\"g\", {\n    parentName: \"svg\"\n  }, mdx(\"g\", {\n    parentName: \"g\",\n    \"className\": \"output\"\n  }, mdx(\"g\", {\n    parentName: \"g\",\n    \"className\": \"clusters\"\n  }), mdx(\"g\", {\n    parentName: \"g\",\n    \"className\": \"edgePaths\"\n  }, mdx(\"g\", {\n    parentName: \"g\",\n    \"className\": \"edgePath LS-Article LE-Source\",\n    \"id\": \"L-Article-Source\",\n    \"style\": {\n      \"opacity\": \"1\"\n    }\n  }, mdx(\"path\", {\n    parentName: \"g\",\n    \"className\": \"path\",\n    \"d\": \"M60.96875,46L60.96875,80L145.32473466981133,114\",\n    \"markerEnd\": \"url(#arrowhead16)\",\n    \"style\": {\n      \"fill\": \"none\"\n    }\n  }), mdx(\"defs\", {\n    parentName: \"g\"\n  }, mdx(\"marker\", {\n    parentName: \"defs\",\n    \"id\": \"arrowhead16\",\n    \"viewBox\": \"0 0 10 10\",\n    \"refX\": \"9\",\n    \"refY\": \"5\",\n    \"markerUnits\": \"strokeWidth\",\n    \"markerWidth\": \"8\",\n    \"markerHeight\": \"6\",\n    \"orient\": \"auto\"\n  }, mdx(\"path\", {\n    parentName: \"marker\",\n    \"d\": \"M 0 0 L 10 5 L 0 10 z\",\n    \"className\": \"arrowheadPath\",\n    \"style\": {\n      \"strokeWidth\": \"1\",\n      \"strokeDasharray\": \"1, 0\"\n    }\n  })))), mdx(\"g\", {\n    parentName: \"g\",\n    \"className\": \"edgePath LS-Data LE-Source\",\n    \"id\": \"L-Data-Source\",\n    \"style\": {\n      \"opacity\": \"1\"\n    }\n  }, mdx(\"path\", {\n    parentName: \"g\",\n    \"className\": \"path\",\n    \"d\": \"M323.9609375,46L323.9609375,80L239.60495283018867,114\",\n    \"markerEnd\": \"url(#arrowhead17)\",\n    \"style\": {\n      \"fill\": \"none\"\n    }\n  }), mdx(\"defs\", {\n    parentName: \"g\"\n  }, mdx(\"marker\", {\n    parentName: \"defs\",\n    \"id\": \"arrowhead17\",\n    \"viewBox\": \"0 0 10 10\",\n    \"refX\": \"9\",\n    \"refY\": \"5\",\n    \"markerUnits\": \"strokeWidth\",\n    \"markerWidth\": \"8\",\n    \"markerHeight\": \"6\",\n    \"orient\": \"auto\"\n  }, mdx(\"path\", {\n    parentName: \"marker\",\n    \"d\": \"M 0 0 L 10 5 L 0 10 z\",\n    \"className\": \"arrowheadPath\",\n    \"style\": {\n      \"strokeWidth\": \"1\",\n      \"strokeDasharray\": \"1, 0\"\n    }\n  })))), mdx(\"g\", {\n    parentName: \"g\",\n    \"className\": \"edgePath LS-Source LE-Target\",\n    \"id\": \"L-Source-Target\",\n    \"style\": {\n      \"opacity\": \"1\"\n    }\n  }, mdx(\"path\", {\n    parentName: \"g\",\n    \"className\": \"path\",\n    \"d\": \"M192.46484375,152L192.46484375,186L192.46484375,220\",\n    \"markerEnd\": \"url(#arrowhead18)\",\n    \"style\": {\n      \"fill\": \"none\"\n    }\n  }), mdx(\"defs\", {\n    parentName: \"g\"\n  }, mdx(\"marker\", {\n    parentName: \"defs\",\n    \"id\": \"arrowhead18\",\n    \"viewBox\": \"0 0 10 10\",\n    \"refX\": \"9\",\n    \"refY\": \"5\",\n    \"markerUnits\": \"strokeWidth\",\n    \"markerWidth\": \"8\",\n    \"markerHeight\": \"6\",\n    \"orient\": \"auto\"\n  }, mdx(\"path\", {\n    parentName: \"marker\",\n    \"d\": \"M 0 0 L 10 5 L 0 10 z\",\n    \"className\": \"arrowheadPath\",\n    \"style\": {\n      \"strokeWidth\": \"1\",\n      \"strokeDasharray\": \"1, 0\"\n    }\n  }))))), mdx(\"g\", {\n    parentName: \"g\",\n    \"className\": \"edgeLabels\"\n  }, mdx(\"g\", {\n    parentName: \"g\",\n    \"className\": \"edgeLabel\",\n    \"transform\": \"translate(60.96875,80)\",\n    \"style\": {\n      \"opacity\": \"1\"\n    }\n  }, mdx(\"g\", {\n    parentName: \"g\",\n    \"transform\": \"translate(-25.78125,-9)\",\n    \"className\": \"label\"\n  }, mdx(\"rect\", {\n    parentName: \"g\",\n    \"rx\": \"0\",\n    \"ry\": \"0\",\n    \"width\": \"51.5625\",\n    \"height\": \"18\"\n  }), mdx(\"foreignObject\", {\n    parentName: \"g\",\n    \"width\": \"51.5625\",\n    \"height\": \"18\"\n  }, mdx(\"div\", {\n    parentName: \"foreignObject\",\n    \"xmlns\": \"http://www.w3.org/1999/xhtml\",\n    \"style\": {\n      \"display\": \"inline-block\",\n      \"whiteSpace\": \"nowrap\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"id\": \"L-L-Article-Source\",\n    \"className\": \"edgeLabel L-LS-Article' L-LE-Source\"\n  }, \"commit\"))))), mdx(\"g\", {\n    parentName: \"g\",\n    \"className\": \"edgeLabel\",\n    \"transform\": \"translate(323.9609375,80)\",\n    \"style\": {\n      \"opacity\": \"1\"\n    }\n  }, mdx(\"g\", {\n    parentName: \"g\",\n    \"transform\": \"translate(-25.78125,-9)\",\n    \"className\": \"label\"\n  }, mdx(\"rect\", {\n    parentName: \"g\",\n    \"rx\": \"0\",\n    \"ry\": \"0\",\n    \"width\": \"51.5625\",\n    \"height\": \"18\"\n  }), mdx(\"foreignObject\", {\n    parentName: \"g\",\n    \"width\": \"51.5625\",\n    \"height\": \"18\"\n  }, mdx(\"div\", {\n    parentName: \"foreignObject\",\n    \"xmlns\": \"http://www.w3.org/1999/xhtml\",\n    \"style\": {\n      \"display\": \"inline-block\",\n      \"whiteSpace\": \"nowrap\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"id\": \"L-L-Data-Source\",\n    \"className\": \"edgeLabel L-LS-Data' L-LE-Source\"\n  }, \"commit\"))))), mdx(\"g\", {\n    parentName: \"g\",\n    \"className\": \"edgeLabel\",\n    \"transform\": \"translate(192.46484375,186)\",\n    \"style\": {\n      \"opacity\": \"1\"\n    }\n  }, mdx(\"g\", {\n    parentName: \"g\",\n    \"transform\": \"translate(-72.9375,-9)\",\n    \"className\": \"label\"\n  }, mdx(\"rect\", {\n    parentName: \"g\",\n    \"rx\": \"0\",\n    \"ry\": \"0\",\n    \"width\": \"145.875\",\n    \"height\": \"18\"\n  }), mdx(\"foreignObject\", {\n    parentName: \"g\",\n    \"width\": \"145.875\",\n    \"height\": \"18\"\n  }, mdx(\"div\", {\n    parentName: \"foreignObject\",\n    \"xmlns\": \"http://www.w3.org/1999/xhtml\",\n    \"style\": {\n      \"display\": \"inline-block\",\n      \"whiteSpace\": \"nowrap\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"id\": \"L-L-Source-Target\",\n    \"className\": \"edgeLabel L-LS-Source' L-LE-Target\"\n  }, \"when update, trigger\")))))), mdx(\"g\", {\n    parentName: \"g\",\n    \"className\": \"nodes\"\n  }, mdx(\"g\", {\n    parentName: \"g\",\n    \"className\": \"node default\",\n    \"id\": \"flowchart-Article-10\",\n    \"transform\": \"translate(60.96875,27)\",\n    \"style\": {\n      \"opacity\": \"1\"\n    }\n  }, mdx(\"rect\", {\n    parentName: \"g\",\n    \"rx\": \"0\",\n    \"ry\": \"0\",\n    \"x\": \"-52.96875\",\n    \"y\": \"-19\",\n    \"width\": \"105.9375\",\n    \"height\": \"38\",\n    \"className\": \"label-container\"\n  }), mdx(\"g\", {\n    parentName: \"g\",\n    \"className\": \"label\",\n    \"transform\": \"translate(0,0)\"\n  }, mdx(\"g\", {\n    parentName: \"g\",\n    \"transform\": \"translate(-42.96875,-9)\"\n  }, mdx(\"foreignObject\", {\n    parentName: \"g\",\n    \"width\": \"85.9375\",\n    \"height\": \"18\"\n  }, mdx(\"div\", {\n    parentName: \"foreignObject\",\n    \"xmlns\": \"http://www.w3.org/1999/xhtml\",\n    \"style\": {\n      \"display\": \"inline-block\",\n      \"whiteSpace\": \"nowrap\"\n    }\n  }, \"Write Article\"))))), mdx(\"g\", {\n    parentName: \"g\",\n    \"className\": \"node default\",\n    \"id\": \"flowchart-Data-11\",\n    \"transform\": \"translate(323.9609375,27)\",\n    \"style\": {\n      \"opacity\": \"1\"\n    }\n  }, mdx(\"rect\", {\n    parentName: \"g\",\n    \"rx\": \"0\",\n    \"ry\": \"0\",\n    \"x\": \"-160.0234375\",\n    \"y\": \"-19\",\n    \"width\": \"320.046875\",\n    \"height\": \"38\",\n    \"className\": \"label-container\"\n  }), mdx(\"g\", {\n    parentName: \"g\",\n    \"className\": \"label\",\n    \"transform\": \"translate(0,0)\"\n  }, mdx(\"g\", {\n    parentName: \"g\",\n    \"transform\": \"translate(-150.0234375,-9)\"\n  }, mdx(\"foreignObject\", {\n    parentName: \"g\",\n    \"width\": \"300.046875\",\n    \"height\": \"18\"\n  }, mdx(\"div\", {\n    parentName: \"foreignObject\",\n    \"xmlns\": \"http://www.w3.org/1999/xhtml\",\n    \"style\": {\n      \"display\": \"inline-block\",\n      \"whiteSpace\": \"nowrap\"\n    }\n  }, \"Third Party's JSON Data tweets,instagram\"))))), mdx(\"g\", {\n    parentName: \"g\",\n    \"className\": \"node default\",\n    \"id\": \"flowchart-Source-13\",\n    \"transform\": \"translate(192.46484375,133)\",\n    \"style\": {\n      \"opacity\": \"1\"\n    }\n  }, mdx(\"rect\", {\n    parentName: \"g\",\n    \"rx\": \"0\",\n    \"ry\": \"0\",\n    \"x\": \"-86.9375\",\n    \"y\": \"-19\",\n    \"width\": \"173.875\",\n    \"height\": \"38\",\n    \"className\": \"label-container\"\n  }), mdx(\"g\", {\n    parentName: \"g\",\n    \"className\": \"label\",\n    \"transform\": \"translate(0,0)\"\n  }, mdx(\"g\", {\n    parentName: \"g\",\n    \"transform\": \"translate(-76.9375,-9)\"\n  }, mdx(\"foreignObject\", {\n    parentName: \"g\",\n    \"width\": \"153.875\",\n    \"height\": \"18\"\n  }, mdx(\"div\", {\n    parentName: \"foreignObject\",\n    \"xmlns\": \"http://www.w3.org/1999/xhtml\",\n    \"style\": {\n      \"display\": \"inline-block\",\n      \"whiteSpace\": \"nowrap\"\n    }\n  }, \"Content Source Repo\"))))), mdx(\"g\", {\n    parentName: \"g\",\n    \"className\": \"node default\",\n    \"id\": \"flowchart-Target-17\",\n    \"transform\": \"translate(192.46484375,239)\",\n    \"style\": {\n      \"opacity\": \"1\"\n    }\n  }, mdx(\"rect\", {\n    parentName: \"g\",\n    \"rx\": \"0\",\n    \"ry\": \"0\",\n    \"x\": \"-62.03125\",\n    \"y\": \"-19\",\n    \"width\": \"124.0625\",\n    \"height\": \"38\",\n    \"className\": \"label-container\"\n  }), mdx(\"g\", {\n    parentName: \"g\",\n    \"className\": \"label\",\n    \"transform\": \"translate(0,0)\"\n  }, mdx(\"g\", {\n    parentName: \"g\",\n    \"transform\": \"translate(-52.03125,-9)\"\n  }, mdx(\"foreignObject\", {\n    parentName: \"g\",\n    \"width\": \"104.0625\",\n    \"height\": \"18\"\n  }, mdx(\"div\", {\n    parentName: \"foreignObject\",\n    \"xmlns\": \"http://www.w3.org/1999/xhtml\",\n    \"style\": {\n      \"display\": \"inline-block\",\n      \"whiteSpace\": \"nowrap\"\n    }\n  }, \"Build Blog Site\")))))))))), mdx(\"h2\", {\n    \"id\": \"sync-third-partys-json-data\"\n  }, \"Sync Third Party\\u2019s JSON Data\"), mdx(\"p\", null, \"How can I own my data? Maybe it\\u2019s a googd idea to store all my third party\\u2019s data to my git repository, then, even Twitter shut down, I still have my data.\"), mdx(\"p\", null, \"I use \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/actionsflow/actionsflow\"\n  }, \"Actionsflow\"), \" to sync my tweets, instagram post, when Actionsflow detect Twitter or Instagram updates, it\\u2019ll get the JSON data of them by using their official API, and create a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".json\"), \" file, create a pull request to my \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/theowenyoung/story\"\n  }, \"content repository\"), \".\"), mdx(\"p\", null, \"For more about \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/actionsflow/actionsflow\"\n  }, \"Actionsflow\"), \", please see \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://actionsflow.github.io/docs/\"\n  }, \"docs\")), mdx(\"p\", null, \"Here is \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/theowenyoung/story/blob/main/workflows/sync-tweets.yml\"\n  }, \"the Twitter workflow\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"name: Sync Tweets to JSON files\\non:\\n  twitter:\\n    auth:\\n      consumer_key: ${{ secrets.TWITTER_CONSUMER_KEY }}\\n      consumer_secret: ${{ secrets.TWITTER_CONSUMER_SECRET }}\\n      access_token: ${{ secrets.TWITTER_ACCESS_TOKEN }}\\n      access_token_secret: ${{ secrets.TWITTER_ACCESS_SECRET }}\\n    params:\\n      screen_name: theowenyoung\\n    fetchAllResultsAtFirst: true\\n    config:\\n      exportOutputs: true\\n      outputsMode: combine\\njobs:\\n  sync:\\n    name: Sync Tweets to JSON\\n    runs-on: ubuntu-latest\\n    steps:\\n      - name: Create Tweet JSON\\n        uses: actions/github-script@v2\\n        env:\\n          OUTPUTS_PATH: ${{ on.twitter.outputs.path }}\\n        with:\\n          github-token: ${{ secrets.PERSONAL_TOKEN }}\\n          script: |\\n            const syncTweets = require(`${process.env.GITHUB_WORKSPACE}/scripts/sync-tweets`)\\n            const result = await syncTweets({lang:'en'})\\n            return result\\n\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/theowenyoung/story/blob/main/workflows/sync-instagram.yml\"\n  }, \"The Instagram workflow\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"name: Sync Instagram to JSON files\\non:\\n  instagram:\\n    access_token: ${{ secrets.INSTAGRAM_ACCESS_TOKEN }}\\n    user_id: \\\"17841432487737681\\\"\\n    fetchAllResultsAtFirst: true\\n    config:\\n      exportOutputs: true\\n      outputsMode: combine\\njobs:\\n  sync:\\n    name: Sync Instagram to JSON\\n    runs-on: ubuntu-latest\\n    steps:\\n      - name: Create Instagram JSON\\n        uses: actions/github-script@v3\\n        env:\\n          OUTPUTS_PATH: ${{ on.instagram.outputs.path }}\\n        with:\\n          github-token: ${{ secrets.PERSONAL_TOKEN }}\\n          script: |\\n            const sync = require(`${process.env.GITHUB_WORKSPACE}/scripts/sync-instagram`)\\n            const result = await sync({lang:'en'})\\n            return result\\n\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Disclaimer: I\\u2019m the author of \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/actionsflow/actionsflow\"\n  }, \"Actionsflow\"), \" :)\")), mdx(\"h2\", {\n    \"id\": \"language\"\n  }, \"Language\"), mdx(\"p\", null, \"My native language is Chinese, so I write Chinese posts, I have two Twitter accounts to write tweets for \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://twitter.com/TheOwenYoung\"\n  }, \"English tweets\"), \" and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://twitter.com/OwenYoungZh\"\n  }, \"Chinese tweets\"), \", the content repository\\u2019s structure is like this:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"/en\\n  instagram/\\n  tweets/\\n  posts/\\n/zh\\n  tweets/\\n  posts/\\n\")), mdx(\"p\", null, \"I created 2 menu links \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/zh\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/en\"), \" to let users filter posts by language.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://i.imgur.com/VsRAC3u.png\",\n    \"alt\": \"Menulinks Figure\"\n  })), mdx(\"h2\", {\n    \"id\": \"gatsby-config\"\n  }, \"Gatsby Config\"), mdx(\"p\", null, \"Here is the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/theowenyoung/theowenyoung.github.io/blob/main/gatsby-config.js\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"gatsby-config.js\")), \" for this blog:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"/**\\n * Configure your Gatsby site with this file.\\n *\\n * See: https://www.gatsbyjs.com/docs/gatsby-config/\\n */\\nconst _ = require(\\\"lodash\\\");\\nmodule.exports = {\\n  /* Your site config here */\\n  siteMetadata: {\\n    title: `Owen Young's Story`,\\n    siteUrl: `https://blog.owenyoung.com`,\\n    author: \\\"Owen Young\\\",\\n    description: \\\"All my stories are here\\\",\\n    keywords: [\\\"Owen\\\", \\\"Owen Young\\\", \\\"Blog\\\", \\\"Story\\\"],\\n    telegram: \\\"@theowenyoung\\\",\\n    menuLinks: [\\n      {\\n        name: \\\"\\u4EC5\\u663E\\u793A\\u4E2D\\u6587\\\",\\n        url: \\\"/zh\\\",\\n      },\\n      {\\n        name: \\\"Only English\\\",\\n        url: \\\"/en\\\",\\n      },\\n    ],\\n    categories: [\\n      {\\n        name: \\\"Post\\\",\\n        url: \\\"/tags/post\\\",\\n      },\\n      {\\n        name: \\\"Tweet\\\",\\n        url: \\\"/tags/tweet\\\",\\n      },\\n      {\\n        name: \\\"Instagram\\\",\\n        url: \\\"/tags/instagram\\\",\\n      },\\n    ],\\n    social: [\\n      {\\n        name: \\\"Github @theowenyoung\\\",\\n        url: \\\"https://github.com/theowenyoung\\\",\\n      },\\n      {\\n        name: \\\"RSS\\\",\\n        url: \\\"/rss.xml\\\",\\n      },\\n      {\\n        name: \\\"English RSS\\\",\\n        url: \\\"/en/rss.xml\\\",\\n      },\\n\\n      {\\n        name: \\\"\\u4E2D\\u6587RSS\\\",\\n        url: \\\"/zh/rss.xml\\\",\\n      },\\n      {\\n        name: \\\"Twitter @TheOwenYoung\\\",\\n        url: \\\"https://twitter.com/TheOwenYoung\\\",\\n      },\\n      {\\n        name: \\\"\\u4E2D\\u6587Twitter @OwenYoungZh\\\",\\n        url: \\\"https://twitter.com/OwenYoungZh\\\",\\n      },\\n      {\\n        name: \\\"Instagram @iamowenyoung\\\",\\n        url: \\\"https://www.instagram.com/iamowenyoung/\\\",\\n      },\\n      {\\n        name: \\\"Source\\\",\\n        url: \\\"https://github.com/theowenyoung/story\\\",\\n      },\\n      {\\n        name: \\\"Site Source\\\",\\n        url: \\\"https://github.com/theowenyoung/theowenyoung.github.io\\\",\\n      },\\n    ],\\n  },\\n  plugins: [\\n    {\\n      resolve: `@theowenyoung/gatsby-source-git`,\\n      options: {\\n        name: `content/posts`,\\n        remote: `https://github.com/theowenyoung/story.git`,\\n        branch: `main`,\\n        // Only import the docs folder from a codebase.\\n        patterns: [\\\"en/**\\\", \\\"assets/**\\\", \\\"zh/**\\\"],\\n      },\\n    },\\n    {\\n      resolve: `gatsby-transformer-json`,\\n      options: {\\n        typeName: ({ node }) => {\\n          const directorys = node.relativeDirectory.split(`/`);\\n          const locale = directorys[0];\\n          const rootDirectoryName = directorys[1];\\n          return _.upperFirst(\\n            _.camelCase(`${locale} ${rootDirectoryName} Json`)\\n          );\\n        },\\n      },\\n    },\\n    {\\n      resolve: `gatsby-plugin-mdx`,\\n      options: {\\n        extensions: [`.mdx`, `.md`],\\n        gatsbyRemarkPlugins: [\\n          {\\n            resolve: `gatsby-remark-images`,\\n            options: {\\n              maxWidth: 1024,\\n              linkImagesToOriginal: false,\\n            },\\n          },\\n          { resolve: `gatsby-remark-copy-linked-files` },\\n          { resolve: `gatsby-remark-smartypants` },\\n          {\\n            resolve: \\\"gatsby-remark-mermaid\\\",\\n            options: {\\n              viewport: {\\n                width: 768,\\n                height: 800,\\n              },\\n            },\\n          },\\n        ],\\n        remarkPlugins: [\\n          require(`remark-slug`),\\n          require(`remark-emoji`),\\n          require(`remark-toc`),\\n        ],\\n      },\\n    },\\n    {\\n      resolve: `gatsby-theme-timeline`,\\n      options: {\\n        mdxOtherwiseConfigured: true,\\n        shouldTransformJson: false,\\n        tweetTypeName: [\\\"EnTweetsJson\\\", \\\"ZhTweetsJson\\\"],\\n        instagramTypeName: [\\\"EnInstagramJson\\\", \\\"ZhInstagramJson\\\"],\\n        utterances: {\\n          repo: \\\"theowenyoung/story\\\",\\n          label: \\\"comment\\\",\\n        },\\n      },\\n    },\\n    {\\n      resolve: `gatsby-plugin-manifest`,\\n      options: {\\n        name: `Owen Young's Story`,\\n        short_name: `Owen`,\\n        start_url: `/`,\\n        background_color: `#f7f0eb`,\\n        theme_color: `#FF4500`,\\n        display: `standalone`,\\n        icon: `src/images/icon.png`,\\n      },\\n    },\\n    {\\n      resolve: `gatsby-plugin-feed`,\\n      options: {\\n        feeds: [\\\"\\\", \\\"en\\\", \\\"zh\\\"].map((locale) => {\\n          return {\\n            serialize: ({ query: { site, allBlogPost } }) => {\\n              return allBlogPost.nodes\\n                .filter((node) => {\\n                  if (locale === \\\"\\\") {\\n                    return true;\\n                  } else {\\n                    return node.tags.includes(locale);\\n                  }\\n                })\\n                .map((node) => {\\n                  let html = node.body;\\n                  if (node.__typename === \\\"MdxBlogPost\\\") {\\n                    html = node.parent.html;\\n                  }\\n                  return Object.assign(\\n                    {},\\n                    {\\n                      title: node.title,\\n                      description: node.excerpt,\\n                      date: node.dateISO,\\n                      url: site.siteMetadata.siteUrl + node.slug,\\n                      guid: site.siteMetadata.siteUrl + node.slug,\\n                      custom_elements: [{ \\\"content:encoded\\\": html }],\\n                    }\\n                  );\\n                });\\n            },\\n            query: `\\n            {\\n              allBlogPost(limit: 25, sort: {fields: [date, slug], order: DESC}) {\\n                nodes {\\n                  id\\n                  __typename\\n                  excerpt\\n                  slug\\n                  title\\n                  body\\n                  tags\\n                  dateISO: date\\n                  ... on MdxBlogPost {\\n                    id\\n                    parent {\\n                      ... on Mdx {\\n                        id\\n                        html\\n                        parent {\\n                          ... on File {\\n                            id\\n                            name\\n                            sourceInstanceName\\n                          }\\n                        }\\n                      }\\n                    }\\n                  }\\n                  ... on SocialMediaPost {\\n                    id\\n                    parent {\\n                      __typename\\n                    }\\n                  }\\n                }\\n              }\\n            }\\n            `,\\n            output: `/${locale ? locale + \\\"/\\\" : \\\"\\\"}rss.xml`,\\n          };\\n        }),\\n      },\\n    },\\n    {\\n      resolve: `gatsby-plugin-sitemap`,\\n    },\\n    {\\n      resolve: `gatsby-plugin-google-gtag`,\\n      options: {\\n        // You can add multiple tracking ids and a pageview event will be fired for all of them.\\n        trackingIds: [\\n          \\\"G-FS0E2RE694\\\", // Google Analytics / GA\\n        ],\\n      },\\n    },\\n  ],\\n};\\n\")), mdx(\"h2\", {\n    \"id\": \"related-repositories\"\n  }, \"Related Repositories\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/theowenyoung/story\"\n  }, \"Content Repository\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/theowenyoung/theowenyoung.github.io\"\n  }, \"Site Repository\"))));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"/en/posts/how-i-built-my-blog/","title":"How I Built my Blog?","tags":["Gatsby","Theme","Blog","Stack","post","en"],"date":"January 30, 2021","dateISO":"2021-01-30T00:00:00.000Z","datetime":"2021-01-30 00:00","image":null,"imageAlt":null,"socialImage":null,"__typename":"MdxBlogPost"},"previous":{"id":"TweetPost-1355127627904737287","excerpt":"","slug":"/tweet/1355127627904737287","title":"刚好前段时间在做国外股市热门 https://t.co/516Y770Tbo ，抓取了reddit的stocks，investing, wallstreetbet还有一些推特的财经博主的热门推，用deepl把大纲翻译成中文，所以算是全程目睹了 $GME 的从开始到现在的热度。 看起来这个站点还是有用的！","date":"January 29, 2021"},"next":{"id":"TweetPost-1355660673246613504","excerpt":"","slug":"/tweet/1355660673246613504","title":"晨炮和口气的矛盾如何优雅的解决？","date":"January 30, 2021"}},"pageContext":{"basePath":"/","pageType":"detail","id":"9eb39dce-a52f-52a3-882f-dc2a70f09c91","previousId":"TweetPost-1355127627904737287","nextId":"TweetPost-1355660673246613504","maxWidth":1024,"siteMetadata":null,"locale":"en","hrefLang":"en-US","originalPath":"/en/posts/how-i-built-my-blog/","dateFormat":"MM/DD/YYYY"}},
    "staticQueryHashes": ["1239077767","2744905544","3280999885"]}