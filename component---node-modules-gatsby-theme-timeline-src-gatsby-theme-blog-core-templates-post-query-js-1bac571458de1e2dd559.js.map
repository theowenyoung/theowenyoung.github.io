{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/gatsby-theme-timeline/src/components/detail-footer.js","webpack:///./node_modules/gatsby-theme-timeline/src/components/post/title.js","webpack:///./node_modules/gatsby-theme-timeline/src/components/post/date.js","webpack:///./node_modules/gatsby-theme-timeline/src/components/post/detail.js","webpack:///./node_modules/gatsby-theme-timeline/src/components/tweet/detail.js","webpack:///./node_modules/gatsby-theme-timeline/src/components/reddit/detail.js","webpack:///./node_modules/gatsby-theme-timeline/src/components/detail.js","webpack:///./node_modules/gatsby-theme-timeline/src/components/detail-page.js","webpack:///./node_modules/gatsby-theme-timeline/src/gatsby-theme-blog-core/templates/post-query.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack:///./node_modules/@babel/runtime/helpers/construct.js"],"names":["MDXRenderer","require","module","exports","TypeError","PostFooter","previous","next","tags","basePath","css","pt","pb","length","div","sx","display","flexWrap","mb","fontSize","map","tag","to","withPrefix","urlJoin","kebabCase","key","as","justifyContent","listStyle","padding","a","Link","slug","rel","title","PostTitle","props","h1","PostDate","p","color","Detail","post","date","mt","img","maxWidth","margin","body","idStr","datetime","authorName","authorScreenName","processTweetString","blockquote","className","href","permalink","subreddit","theme","styles","detail","__typename","TWEET_TYPE_NAME","REDDIT_TYPE_NAME","DetailPage","data","blogPost","site","siteMetadata","location","item","fields","type","description","excerpt","imageSource","socialImage","childImageSharp","fluid","src","image","imageAlt","query","PostPage","iter","Symbol","iterator","Object","Array","from","arrayLikeToArray","arr","isArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","_setPrototypeOf","o","setPrototypeOf","__proto__","len","i","arr2","React","mdx","useMDXScope","scope","children","mdxScope","End","fullScope","keys","values","fn","minLen","n","prototype","toString","call","slice","constructor","name","test","Reflect","construct","sham","Proxy","Date","e","isNativeReflectConstruct","_construct","Parent","args","Class","push","apply","instance","Function","bind","arguments"],"mappings":"gFAMA,IAAMA,EAAcC,EAApB,QAEAC,UAAiB,CACfF,YAAaA,I,mBCLfE,EAAOC,QAJP,WACE,MAAM,IAAIC,UAAU,0I,0OCoEPC,EA9DI,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,KAAMC,EAAnB,EAAmBA,KAAMC,EAAzB,EAAyBA,SAAzB,OACjB,sBACEC,IAAKA,YAAI,CACPC,GAAI,EACJC,GAAI,KAGLJ,GAAQA,EAAKK,OAAS,GACrB,YAAC,IAAOC,IAAR,CACEC,GAAI,CACFC,QAAQ,OACRC,SAAS,OACTC,GAAI,EACJC,SAAU,IAGXX,GACCA,EAAKY,KAAI,SAACC,GACR,OACE,YAAC,IAAD,CACEC,GAAIC,YACFC,eAAQf,GAAQ,IAAT,QAA0BgB,IAAUJ,KAE7CK,IAAG,OAASL,GAEXA,QAMXf,GAAYC,IACZ,YAAC,IAAD,CACEoB,GAAG,KACHZ,GAAI,CACFE,SAAS,OACTW,eAAe,gBACfC,UAAU,OACVC,QAAS,EACTnB,GAAI,EACJQ,SAAU,IAGZ,sBACGb,GACC,YAAC,IAAOyB,EAAR,CAAUJ,GAAIK,IAAMV,GAAIhB,EAAS2B,KAAMC,IAAI,QAA3C,KACK5B,EAAS6B,QAIlB,sBACG5B,GACC,YAAC,IAAOwB,EAAR,CAAUJ,GAAIK,IAAMV,GAAIf,EAAK0B,KAAMC,IAAI,QACpC3B,EAAK4B,MADR,U,gDCtDGC,EAFG,SAACC,GAAD,OAAW,YAAC,IAAOC,GAAOD,I,YCU7BE,EAVE,SAACF,GAAD,OACf,YAAC,IAAOG,EAAR,aACEzB,GAAI,CACF0B,MAAM,YACNvB,GAAI,IAEFmB,KCuBOK,EAzBA,SAACC,GACd,OACE,2BACE,0BACE,YAAC,EAAD,KAAWA,EAAKC,MAChB,YAAC,IAAD,CAAMD,KAAMA,IACZ,YAAC,EAAD,CAAO5B,GAAI,CAAEG,GAAI,EAAG2B,GAAI,IAAMF,EAAKR,QAErC,uBACEpB,GAAI,CACFI,SAAU,EACV2B,IAAK,CACHC,SAAS,OACTC,OAAO,SACPhC,QAAQ,QACRJ,GAAI,KAIR,YAAC,cAAD,KAAc+B,EAAKM,S,wBCJZP,EAlBA,SAACC,GAAU,IAChBO,EAAkDP,EAAlDO,MAAOC,EAA2CR,EAA3CQ,SAAUC,EAAiCT,EAAjCS,WAAYC,EAAqBV,EAArBU,iBAC/BJ,EAAOK,YAAmBX,EAAKM,MACrC,OACE,YAAC,IAAOnC,IAAR,CAAYC,GAAI,CAAEgC,SAAS,QAAU5B,SAAU,IAC7C,YAAC,IAAOoC,WAAR,CAAmBC,UAAU,iBAC3B,YAAC,IAAOhB,EAAR,KAAWS,GACX,YAAC,IAAD,CAAMN,KAAMA,IAFd,KAGWS,EAHX,MAG0BC,EAH1B,QAIE,YAAC,IAAOtB,EAAR,CACE0B,KAAI,uBAAyBJ,EAAzB,WAAoDH,GAEvDC,MCeIT,EA3BA,SAACC,GAAU,IAChBe,EAAgCf,EAAhCe,UAAWvB,EAAqBQ,EAArBR,MAAOwB,EAAchB,EAAdgB,UAC1B,OACE,2BACE,YAAC,IAAO7C,IAAR,CACEC,GAAI,CACF,iBAAkB,SAAC6C,GAAD,OAAWA,EAAMC,OAAON,YAC1C,gBAAiB,CACfP,OAAO,kBAIX,0BAAYQ,UAAU,eACpB,YAAC,IAAOzB,EAAR,CAAU0B,KAAI,yBAA2BC,GACtCvB,GAEH,uBAJF,OAME,YAAC,IAAOJ,EAAR,CACE0B,KAAI,2BAA6BE,GADnC,OAESA,OCVJjB,EATA,SAACoB,GACd,OAAIA,EAAOC,aAAeC,IACjB,YAAC,EAAgBF,GACfA,EAAOC,aAAeE,IACxB,YAAC,EAAiBH,GAEpB,YAAC,EAAeA,ICuCVI,EA5CI,SAAC,GAUb,IAAD,cATJC,KACEC,EAQE,EARFA,SACA9D,EAOE,EAPFA,SACAC,EAME,EANFA,KAEkB4B,EAIhB,EALFkC,KACEC,aAAgBnC,MAGpBoC,EACI,EADJA,SAEMC,EAAOJ,EACP3D,GAAW+D,SAAA,UAAAA,EAAMC,cAAN,eAAchE,WAAY,IAC3C,OACE,YAAC,IAAD,CAAQA,SAAUA,EAAU8D,SAAUA,EAAUpC,MAAOA,EAAOuC,KAAK,UACjE,YAAC,IAAD,CACEvC,MAAOqC,EAAKrC,MACZwC,YAAaH,EAAKI,QAClBC,YACEL,EAAKM,YAAL,UACIN,EAAKM,mBADT,iBACI,EAAkBC,uBADtB,aACI,EAAmCC,MAAMC,IAD7C,UAEIT,EAAKU,aAFT,iBAEI,EAAYH,uBAFhB,aAEI,EAA6BC,MAAMC,IAEzCE,SAAUX,EAAKW,WAGjB,wBACE,YAAC,EAAWX,GACZ,YAAC,EACK,CACFlE,WACAC,OACAC,KAAMgE,EAAKhE,KACXC,SAAUA,KAIhB,yBACE,YAAC,IAAD,SCvCK2E,GAFEC,YAEG,e,mBCDlBnF,EAAOC,QAJP,SAA0BmF,GACxB,GAAsB,oBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOI,MAAMC,KAAKL,K,qBCD1F,IAAIM,EAAmB,EAAQ,QAM/B1F,EAAOC,QAJP,SAA4B0F,GAC1B,GAAIH,MAAMI,QAAQD,GAAM,OAAOD,EAAiBC,K,qBCHlD,IAAIE,EAAoB,EAAQ,QAE5BC,EAAkB,EAAQ,QAE1BC,EAA6B,EAAQ,QAErCC,EAAoB,EAAQ,QAMhChG,EAAOC,QAJP,SAA4B0F,GAC1B,OAAOE,EAAkBF,IAAQG,EAAgBH,IAAQI,EAA2BJ,IAAQK,M,mBCT9F,SAASC,EAAgBC,EAAG5D,GAM1B,OALAtC,EAAOC,QAAUgG,EAAkBV,OAAOY,gBAAkB,SAAyBD,EAAG5D,GAEtF,OADA4D,EAAEE,UAAY9D,EACP4D,GAGFD,EAAgBC,EAAG5D,GAG5BtC,EAAOC,QAAUgG,G,mBCCjBjG,EAAOC,QAVP,SAA2B0F,EAAKU,IACnB,MAAPA,GAAeA,EAAMV,EAAIhF,UAAQ0F,EAAMV,EAAIhF,QAE/C,IAAK,IAAI2F,EAAI,EAAGC,EAAO,IAAIf,MAAMa,GAAMC,EAAID,EAAKC,IAC9CC,EAAKD,GAAKX,EAAIW,GAGhB,OAAOC,I,woBCPT,IAAMC,EAAQzG,EAAd,QACQ0G,EAAQ1G,EAAQ,QAAhB0G,IACAC,EAAgB3G,EAAQ,QAAxB2G,YAER1G,UAAiB,SAAqB,GAIlC,IAHF2G,EAGC,EAHDA,MACAC,EAEC,EAFDA,SACGzE,EACF,0BACK0E,EAAWH,EADhB,GAIKI,EAAMN,EAAA,SAAc,WACxB,MACE,OAAO,KAGT,IAAMO,EAAS,GAGbP,MAHa,EAIbC,OAJF,GAQMO,EAAOzB,YAAb,GACM0B,EAASD,EAAA,KAAS,SAAAxF,GAAG,OAAIuF,EAAJ,MAG3B,OAFQ,mCAAR,KAEOG,2BAAP,OACC,CAACN,EAlBJ,IAoBA,OAAOJ,uBAAP,M,qBChCF,IAAId,EAAmB,EAAQ,QAW/B1F,EAAOC,QATP,SAAqCiG,EAAGiB,GACtC,GAAKjB,EAAL,CACA,GAAiB,iBAANA,EAAgB,OAAOR,EAAiBQ,EAAGiB,GACtD,IAAIC,EAAI7B,OAAO8B,UAAUC,SAASC,KAAKrB,GAAGsB,MAAM,GAAI,GAEpD,MADU,WAANJ,GAAkBlB,EAAEuB,cAAaL,EAAIlB,EAAEuB,YAAYC,MAC7C,QAANN,GAAqB,QAANA,EAAoB5B,MAAMC,KAAKS,GACxC,cAANkB,GAAqB,2CAA2CO,KAAKP,GAAW1B,EAAiBQ,EAAGiB,QAAxG,K,mBCKFnH,EAAOC,QAbP,WACE,GAAuB,oBAAZ2H,UAA4BA,QAAQC,UAAW,OAAO,EACjE,GAAID,QAAQC,UAAUC,KAAM,OAAO,EACnC,GAAqB,mBAAVC,MAAsB,OAAO,EAExC,IAEE,OADAC,KAAKX,UAAUC,SAASC,KAAKK,QAAQC,UAAUG,KAAM,IAAI,iBAClD,EACP,MAAOC,GACP,OAAO,K,qBCTX,IAAI9B,EAAiB,EAAQ,QAEzB+B,EAA2B,EAAQ,QAEvC,SAASC,EAAWC,EAAQC,EAAMC,GAchC,OAbIJ,IACFlI,EAAOC,QAAUkI,EAAaP,QAAQC,UAEtC7H,EAAOC,QAAUkI,EAAa,SAAoBC,EAAQC,EAAMC,GAC9D,IAAIzG,EAAI,CAAC,MACTA,EAAE0G,KAAKC,MAAM3G,EAAGwG,GAChB,IACII,EAAW,IADGC,SAASC,KAAKH,MAAMJ,EAAQvG,IAG9C,OADIyG,GAAOnC,EAAesC,EAAUH,EAAMjB,WACnCoB,GAIJN,EAAWK,MAAM,KAAMI,WAGhC5I,EAAOC,QAAUkI","file":"component---node-modules-gatsby-theme-timeline-src-gatsby-theme-blog-core-templates-post-query-js-1bac571458de1e2dd559.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","/** @jsx jsx */\nimport { Link } from \"gatsby\"\nimport { css, Styled, Flex, jsx } from \"theme-ui\"\nimport { withPrefix } from \"gatsby\"\nimport kebabCase from \"lodash/kebabCase\"\nimport Tag from \"./tag\"\nimport { join as urlJoin } from \"path\"\nconst PostFooter = ({ previous, next, tags, basePath }) => (\n  <footer\n    css={css({\n      pt: 3,\n      pb: 4,\n    })}\n  >\n    {tags && tags.length > 0 && (\n      <Styled.div\n        sx={{\n          display: `flex`,\n          flexWrap: `wrap`,\n          mb: 3,\n          fontSize: 2,\n        }}\n      >\n        {tags &&\n          tags.map((tag) => {\n            return (\n              <Tag\n                to={withPrefix(\n                  urlJoin(basePath || `/`, `tags/${kebabCase(tag)}`)\n                )}\n                key={`tag-${tag}`}\n              >\n                {tag}\n              </Tag>\n            )\n          })}\n      </Styled.div>\n    )}\n    {(previous || next) && (\n      <Flex\n        as=\"ul\"\n        sx={{\n          flexWrap: `wrap`,\n          justifyContent: `space-between`,\n          listStyle: `none`,\n          padding: 0,\n          pt: 3,\n          fontSize: 2,\n        }}\n      >\n        <li>\n          {previous && (\n            <Styled.a as={Link} to={previous.slug} rel=\"prev\">\n              ← {previous.title}\n            </Styled.a>\n          )}\n        </li>\n        <li>\n          {next && (\n            <Styled.a as={Link} to={next.slug} rel=\"next\">\n              {next.title} →\n            </Styled.a>\n          )}\n        </li>\n      </Flex>\n    )}\n  </footer>\n)\n\nexport default PostFooter\n","import React from \"react\"\nimport { Styled } from \"theme-ui\"\n\nconst PostTitle = (props) => <Styled.h1 {...props} />\n\nexport default PostTitle\n","/** @jsx jsx */\nimport { Styled, jsx } from \"theme-ui\"\n\nconst PostDate = (props) => (\n  <Styled.p\n    sx={{\n      color: `textMuted`,\n      mb: 2,\n    }}\n    {...props}\n  />\n)\n\nexport default PostDate\n","/** @jsx jsx */\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nimport Hero from \"./hero\"\nimport Title from \"./title\"\nimport PostDate from \"./date\"\nimport { jsx } from \"theme-ui\"\n\nconst Detail = (post) => {\n  return (\n    <article>\n      <header>\n        <PostDate>{post.date}</PostDate>\n        <Hero post={post} />\n        <Title sx={{ mb: 5, mt: 3 }}>{post.title}</Title>\n      </header>\n      <section\n        sx={{\n          fontSize: 2,\n          img: {\n            maxWidth: `full`,\n            margin: `0 auto`,\n            display: `block`,\n            pb: 4,\n          },\n        }}\n      >\n        <MDXRenderer>{post.body}</MDXRenderer>\n      </section>\n    </article>\n  )\n}\n\nexport default Detail\n","/** @jsx jsx */\nimport { jsx, Styled } from \"theme-ui\"\nimport processTweetString from \"./process-tweet-string\"\nimport Hero from \"./hero\"\nconst Detail = (post) => {\n  const { idStr, datetime, authorName, authorScreenName } = post\n  const body = processTweetString(post.body)\n  return (\n    <Styled.div sx={{ maxWidth: `550px`, fontSize: 2 }}>\n      <Styled.blockquote className=\"twitter-tweet\">\n        <Styled.p>{body}</Styled.p>\n        <Hero post={post}></Hero>\n        &mdash; {authorName} (@{authorScreenName}){` `}\n        <Styled.a\n          href={`https://twitter.com/${authorScreenName}/status/${idStr}`}\n        >\n          {datetime}\n        </Styled.a>\n      </Styled.blockquote>\n    </Styled.div>\n  )\n}\nexport default Detail\n","/** @jsx jsx */\n\nimport { jsx, Styled } from \"theme-ui\"\n\nconst Detail = (post) => {\n  const { permalink, title, subreddit } = post\n  return (\n    <article>\n      <Styled.div\n        sx={{\n          \"& > blockquote\": (theme) => theme.styles.blockquote,\n          \"& > div > div\": {\n            margin: `0 !important`,\n          },\n        }}\n      >\n        <blockquote className=\"reddit-card\">\n          <Styled.a href={`https://www.reddit.com${permalink}`}>\n            {title}\n          </Styled.a>\n          <br />\n          from\n          <Styled.a\n            href={`http://www.reddit.com/r/${subreddit}`}\n          >{` /r/${subreddit}`}</Styled.a>\n        </blockquote>\n      </Styled.div>\n    </article>\n  )\n}\n\nexport default Detail\n","import React from \"react\"\nimport { TWEET_TYPE_NAME, REDDIT_TYPE_NAME } from \"../constans\"\nimport PostDetail from \"./post/detail\"\nimport TweetDetail from \"./tweet/detail\"\nimport RedditDetail from \"./reddit/detail\"\nconst Detail = (detail) => {\n  if (detail.__typename === TWEET_TYPE_NAME) {\n    return <TweetDetail {...detail}></TweetDetail>\n  } else if (detail.__typename === REDDIT_TYPE_NAME) {\n    return <RedditDetail {...detail}></RedditDetail>\n  }\n  return <PostDetail {...detail}></PostDetail>\n}\n\nexport default Detail\n","import React from \"react\"\nimport Layout from \"./layout\"\nimport SEO from \"./seo\"\nimport DetailFooter from \"./detail-footer\"\nimport Bio from \"./bio\"\nimport Detail from \"./detail\"\nconst DetailPage = ({\n  data: {\n    blogPost,\n    previous,\n    next,\n    site: {\n      siteMetadata: { title },\n    },\n  },\n  location,\n}) => {\n  const item = blogPost\n  const basePath = item?.fields?.basePath || \"/\"\n  return (\n    <Layout basePath={basePath} location={location} title={title} type=\"detail\">\n      <SEO\n        title={item.title}\n        description={item.excerpt}\n        imageSource={\n          item.socialImage\n            ? item.socialImage?.childImageSharp?.fluid.src\n            : item.image?.childImageSharp?.fluid.src\n        }\n        imageAlt={item.imageAlt}\n      />\n\n      <main>\n        <Detail {...item}></Detail>\n        <DetailFooter\n          {...{\n            previous,\n            next,\n            tags: item.tags,\n            basePath: basePath,\n          }}\n        />\n      </main>\n      <aside>\n        <Bio></Bio>\n      </aside>\n    </Layout>\n  )\n}\n\nexport default DetailPage\n","import { graphql } from \"gatsby\"\nimport PostPage from \"../../components/detail-page\"\n\nexport default PostPage\n\nexport const query = graphql`\n  query DetailPageQuery(\n    $id: String!\n    $previousId: String\n    $nextId: String\n    $maxWidth: Int\n  ) {\n    site {\n      siteMetadata {\n        title\n        social {\n          name\n          url\n        }\n      }\n    }\n    blogPost(id: { eq: $id }) {\n      id\n      excerpt\n      body\n      slug\n      title\n      tags\n      date(formatString: \"MMMM DD, YYYY\")\n      dateISO: date\n      datetime: date(formatString: \"YYYY-MM-DD HH:mm\")\n      image {\n        childImageSharp {\n          fluid(maxWidth: $maxWidth) {\n            ...GatsbyImageSharpFluid\n            src\n          }\n        }\n      }\n      imageAlt\n      socialImage {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n            src\n          }\n        }\n      }\n      ... on RedditPost {\n        video\n        videoWidth\n        videoHeight\n        permalink\n        isSelf\n        postHint\n        isVideo\n        subreddit\n        authorName\n        url\n      }\n      ... on TweetPost {\n        idStr\n        retweeted\n        isQuoteStatus\n        quoteBody\n        quoteAuthorName\n        quoteAuthorScreenName\n        quoteAuthorAvatar {\n          childImageSharp {\n            fixed(width: 24, height: 24) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n        quoteImage {\n          childImageSharp {\n            fluid(maxWidth: $maxWidth) {\n              ...GatsbyImageSharpFluid\n              src\n            }\n          }\n        }\n        authorName\n        authorScreenName\n        authorAvatar {\n          childImageSharp {\n            fixed(width: 48, height: 48) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n        fields {\n          basePath\n        }\n      }\n      ... on MdxBlogPost {\n        id\n        fields {\n          basePath\n        }\n      }\n    }\n    previous: blogPost(id: { eq: $previousId }) {\n      id\n      excerpt\n      slug\n      title\n      date(formatString: \"MMMM DD, YYYY\")\n    }\n    next: blogPost(id: { eq: $nextId }) {\n      id\n      excerpt\n      slug\n      title\n      date(formatString: \"MMMM DD, YYYY\")\n    }\n  }\n`\n","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;"],"sourceRoot":""}